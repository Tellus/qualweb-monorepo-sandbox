# This workflow file contains a workflow that will ONLY run unit tests for
# packages which have seen changes. tj-actions/changed-files *should* correctly
# list the files that have changed in Git commits that are new to the base
# branch.
name: Unit tests
on:
  pull_request:
    branches:
      - main
      - develop
  workflow_call:

jobs:
  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      # Setup/prelims
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup (cache, dependencies)
        uses: ./.github/actions/install_and_cache_dependencies

      # Retrieve files that have changed in this branch compared to the base
      # branch (the base branch should be "main" when pulling from "develop" and
      # "develop" when pulling from feature branches)
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          write_output_files: true

      # For debug purposes only. List the files that the previous action
      # identified as having changed.
      - name: List changed files
        run: echo ${{ steps.changed-files.outputs.modified_files }}

      - name: List changed files (from output file)
        run: cat .github/outputs/modified_files.txt

      - name: Get affected workspaces
        run: echo "AFFECTED_WORKSPACES=$(npx ts-node scripts/get_modified_workspaces.ts --as-workspaces .github/outputs/modified_files.txt)" >> $GITHUB_ENV

      - name: List affected workspaces
        run: echo $AFFECTED_WORKSPACES

      # Build all packages. Do this AFTER the changed files check. After we
      # build everything, a lot of things may look changed to the changed-files
      # action.
      # - name: Build
      #   run: npm -ws run build

      # Consolidated unit testing job. This will run unit tests for all modified
      # packages and their dependents. No duplicates.
      # TODO: consider a third iteration, with separate unit test jobs (so they
      # are separately visible in Github UI), but testing for presence in a
      # distilled version of modified_files.txt that lists packages that have
      # been modified.
      - name: Unit tests
        if: contains(steps.changed-files.outputs.modified_files, 'packages/')
        run: echo Unit tests should run for the following workspaces, $(npx ts-node scripts/get_modified_workspaces.ts --as-workspaces .github/outputs/modified_files.txt)